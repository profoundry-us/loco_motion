name: Playwright Tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
    - main

jobs:
  playwright:
    name: 'Playwright Tests'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Create symlink to LocoMotion gem directory (similar to demo-rspec job)
    - name: Create symlink to LocoMotion gem directory
      run: |
        mkdir -p docs/demo/vendor
        ln -sf $(pwd) docs/demo/vendor/loco_motion-rails

    # Setup Ruby similar to the CICD workflow
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        working-directory: docs/demo

    # Setup Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'yarn'
        cache-dependency-path: 'docs/demo/yarn.lock'

    # Setup yarn linking
    - name: Start yarn linking
      run: |
        yarn link
    - name: Finish yarn linking
      working-directory: docs/demo
      run: |
        yarn link "@profoundry-us/loco_motion"

    # Install Loco Yarn dependencies
    - name: Install Yarn dependencies
      run: yarn install

    # Install Demo dependencies
    - name: Install Demo dependencies
      run: yarn install
      working-directory: docs/demo

    # Build Rails assets for production
    - name: Build assets
      env:
        # Secrets
        SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        ALGOLIA_APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
        UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
        UNSPLASH_SECRET_KEY: ${{ secrets.UNSPLASH_SECRET_KEY }}
        # Variables
        ALGOLIA_ENV: ${{ vars.ALGOLIA_ENV }}
        LOCO_DOCS_HOST: ${{ vars.LOCO_DOCS_HOST }}
        RACK_ENV: ${{ vars.RACK_ENV }}
        RAILS_ENV: ${{ vars.RAILS_ENV }}
        RAILS_LOG_TO_STDOUT: ${{ vars.RAILS_LOG_TO_STDOUT }}
        RAILS_SERVE_STATIC_FILES: ${{ vars.RAILS_SERVE_STATIC_FILES }}
      run: bundle exec rake assets:precompile
      working-directory: docs/demo

    # Start Rails server in production mode in the background
    - name: Start Rails server
      env:
        # Secrets
        SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
        ALGOLIA_APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
        UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
        UNSPLASH_SECRET_KEY: ${{ secrets.UNSPLASH_SECRET_KEY }}
        # Variables
        ALGOLIA_ENV: ${{ vars.ALGOLIA_ENV }}
        LOCO_DOCS_HOST: ${{ vars.LOCO_DOCS_HOST }}
        RACK_ENV: ${{ vars.RACK_ENV }}
        RAILS_ENV: ${{ vars.RAILS_ENV }}
        RAILS_LOG_TO_STDOUT: ${{ vars.RAILS_LOG_TO_STDOUT }}
        RAILS_SERVE_STATIC_FILES: ${{ vars.RAILS_SERVE_STATIC_FILES }}
      run: |
        bundle exec rails server -d -p 3000
        echo "Waiting for server to start..."
        sleep 5
      working-directory: docs/demo

    # Install Playwright browsers
    - name: Install Playwright
      run: yarn playwright install --with-deps
      working-directory: docs/demo

    # Run Playwright tests (the -x stops at the first failure while we test)
    - name: Run Playwright tests
      run: yarn playwright test 'e2e' --reporter=dot,html --workers=1 -x
      working-directory: docs/demo

    # Upload test results on failure
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: docs/demo/playwright-report/
        retention-days: 7

    # Stop Rails server
    - name: Stop Rails server
      if: always()
      run: pkill -f "rails server" || true
      working-directory: docs/demo
