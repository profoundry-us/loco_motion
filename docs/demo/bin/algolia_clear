#!/usr/bin/env ruby
# frozen_string_literal: true

# Clear the Algolia search index

$LOAD_PATH.unshift File.expand_path('../lib', __dir__)
require 'optparse'

begin
  # Parse command line options
  options = { debug: false, force: false }
  
  parser = OptionParser.new do |opts|
    opts.banner = "Usage: bin/algolia_clear [options]"
    
    opts.on("-d", "--debug", "Enable debug output") do
      options[:debug] = true
    end
    
    opts.on("-f", "--force", "Skip confirmation prompt") do
      options[:force] = true
    end
    
    opts.on("-h", "--help", "Show this help message") do
      puts opts
      exit
    end
  end
  
  parser.parse!
  
  # Set debug environment variable
  ENV['DEBUG'] = 'true' if options[:debug]
  debug = options[:debug]
  
  # Check for Algolia credentials
  application_id = ENV['ALGOLIA_APPLICATION_ID']
  api_key = ENV['ALGOLIA_API_KEY']
  
  if application_id.nil? || api_key.nil? || application_id.empty? || api_key.empty?
    puts "Error: Algolia credentials not configured!"
    puts "Please set ALGOLIA_APPLICATION_ID and ALGOLIA_API_KEY environment variables."
    exit 1
  end
  
  # Require after option parsing to allow help without dependencies
  require 'loco_motion/algolia/client'
  
  # Initialize Algolia client
  client = LocoMotion::Algolia::Client.new
  index = client.index('components')
  
  # Ask for confirmation unless force flag is set
  unless options[:force]
    puts "WARNING: This will permanently delete all records in the Algolia 'components' index."
    print "Are you sure you want to continue? [y/N] "
    confirmation = gets.chomp.downcase
    unless confirmation == 'y'
      puts "Operation cancelled."
      exit 0
    end
  end
  
  # Clear the index
  puts "Clearing Algolia index..."
  response = index.clear_objects
  
  puts "Index cleared! Response: #{response}"
  
rescue StandardError => e
  puts "Error: #{e.message}"
  puts e.backtrace.join("\n") if debug
  exit 1
end
