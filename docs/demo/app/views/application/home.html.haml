%h1.text-center.text-5xl.font-black.tracking-wide
  Components, Guides, and Paradigms<br />
  for <i><b>CraZy</b></i>-Fast Development</br />
  in Ruby on Rails!

.mt-16.lg:flex.lg:space-x-8.items-start
  %div{ class: "md:basis-2/5" }
    %h3.text-3xl.font-bold
      Easy, Flexible Components

    %p.mt-2.text-lg
      Powered by the fabulous
      = succeed ',' do
        = daisy_link("ViewComponent", "https://viewcomponent.org", target: "_blank")
      = succeed ', and' do
        = daisy_link "DaisyUI", "https://daisyui.com/", target: "_blank"
      = daisy_link "TailwindCSS", "https://tailwindcss.com/", target: "_blank"
      libraries, our components are designed to be fast, flexible, and easy to
      use <i>directy</i> in Ruby on Rails!

  = doc_example(css: "mt-8 lg:mt-0 lg:basis-3/5 h-44", example_css: "space-x-4") do
    = daisy_button "Primary Button", css: "btn-primary"
    = daisy_swap(off: "ðŸŒš", on: "ðŸŒž", css: "swap-rotate text-4xl")
    = daisy_badge("Large Badge", css: "badge-secondary badge-lg")

.mt-16.xl:flex.xl:flex-row-reverse
  .text-xl.xl:ml-8
    %h3.text-3xl.font-bold
      Simple, Concise Views

    %p.mt-2
      Utlize
      = daisy_link("HAML", "https://haml.info/", target: "_blank")
      so your views are simple, concise, and easy to understand.

    %p.mt-2
      No more messy ERB files with all of their closing tags and embedded Ruby.
      HAML feels more natural to write and reduces file sizes, making your
      views easier to read and maintain.

  .mt-8.xl:mt-0
    .flex.flex-col.xl:flex.xl:flex-row.w-full
      = doc_code(css: "grow", code_css: "xl:pl-2 xl:pr-0 xl:rounded-r-none", language: "erb") do
        :escaped
          <% # Ruby %>

          <% 5.times do |i| %>
            <% if i.even? %>
              <p class="odd">Number <%= i %></p>
            <% else %>
              <p class="even">Numero <%= i %></p>
            <% end %>
          <% end %>

      = doc_code(css: "grow mt-8 xl:mt-0", pre_css: "xl:h-full", code_css: "xl:pl-0 xl:pr-2 xl:h-full xl:rounded-l-none") do
        :escaped
          - # HAML

          - 5.times do |i|
            - if i.even?
              %p.odd Number \#{i}
            - else
              %p.even Numero \#{i}
