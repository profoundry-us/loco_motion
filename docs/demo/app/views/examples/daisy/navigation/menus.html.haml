= doc_title(title: "Menus", comp: @comp) do |title|
  %p
    Menus are used to display a list of options for users to choose from.

= doc_example(title: "Basic Menu") do |doc|
  - doc.with_description do
    %p
      Menus typically contain a list of links or buttons that users can click.
      The styling is very minimal, just adding a hover effect.

  = daisy_menu do |menu|
    - menu.with_item do
      = link_to "Item 1", "#"
    - menu.with_item do
      = link_to "Item 2", "#"
    - menu.with_item do
      = link_to "Item 3", "#"


= doc_example(title: "Horizontal Menu") do |doc|
  - doc.with_description do
    %p
      Menus can be displayed horizontally by adding the
      <code>.menu-horizontal</code> class to the menu. They can also have icons,
      disabled / active items, and many other options.

    = doc_note(css: "mb-4") do
      We can't actually disable the link since the HTML spec does not allow that
      (instead you should generally just make it text). However, we can disable
      the link with CSS and use <code>.pointer-events-none</code> to ensure it
      cannot be clicked. You may also want to add <code>tabindex: -1</code> to
      your link to ensure it cannot be focused with the keyboard.

  = daisy_menu(css: "menu-horizontal") do |menu|
    - menu.with_item do
      = link_to "Item 1", "#"
    - menu.with_item(disabled: true) do
      = link_to "Item 2", "#", tabindex: -1
    - menu.with_item do
      = link_to "Item 3", "#", class: "active"

= doc_example(title: "Nested Menus") do |doc|
  - doc.with_description do
    %p
      Menus can also contain nested menus. This is useful for organizing a large
      number of options.

  - icon_options = { css: "size-4 mr-1 text-slate-600", variant: :mini }
  = daisy_menu(css: "bg-base-100 border border-base-300 rounded-lg shadow-md") do |menu|
    - menu.with_item do
      = link_to "#" do
        = hero_icon("home", **icon_options)
        Home
    - menu.with_item do
      = link_to "#" do
        = hero_icon("bell-alert", **icon_options)
        Notifications
    - menu.with_item(title: "Parent") do
      = daisy_menu do |menu|
        - menu.with_item do
          = link_to "Child 1", "#"
        - menu.with_item do
          = link_to "Child 2", "#"
        - menu.with_item do
          - icon_options[:css] += " !text-yellow-500"
          = link_to "#" do
            Child 3
            = hero_icon("bolt", **icon_options)

