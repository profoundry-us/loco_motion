<% if object.has_tag?(:slot) %>
  <div id="view_component_slots">
    <h2>View Component Slots</h2>
  </div>

  <div class="tags">
    <p class="docstring">
      The <%= object.name %> accepts the following slots enabling you to pass
      custom content (<code>+</code> denotes that you can render multiple).
    </p>

    <ul>
      <% object.tags(:slot).each do |slot| %>
        <% is_multiple = (slot.name.end_with?("+")) %>

        <li class="slots docstring">
          <% if is_multiple %>
            <span class="name">with_<%= slot.name.sub("+", "") %><span class="slot-multiple">+</span></span>
          <% else %>
            <span class="name">with_<%= slot.name %></span>
          <% end %>

          <% if slot.types %>
            <% types_str = slot.types.map{ |t| "{#{t}}" }.join(', ') %>
            <span><%= htmlify_inline("(#{types_str})") %></span>
          <% end %>

          <strong style="padding: 0 4px;">&mdash;</strong>
          <span><%= htmlify_inline(slot.text) %></span>

          <% options = object.tags(:option).select { |opt| opt.name == slot.name } %>
          <% if options.any? %>
            <ul>
              <% options.each do |opt| %>
                <li>
                  <em><%= opt.pair.name %></em>
                  <span><%= htmlify_inline("({#{opt.pair.type}})") %></span>
                  <%= htmlify_inline(opt.pair.text) %>
                </li>
              <% end %>
            </ul>
          <% end %>
        </li>
      <% end %>
    </ul>
  </div>
<% end %>
